* HTTP Methods
** POST
- POST is used to create new resources
- Returns HTTP status 201 (CREATED) on successful creation

** GET
- GET is only used to read data and not change it
- It returns a XML or JSON and HTTP status 200 (OK)
- In an error it returns 404 (NOT FOUND) or 400 (BAD REQUEST)

** PUT
- Put is used to update or replace
- It replace whatever is available at the given URL with different thing
- It also create resource which contains the value of a non-existent resource ID
- Return HTTP status 200 or 204 if not returning any content in body
- Return HTTP status 201 if PUT is used to create resource

** PATCH
- PATCH is used to modify
** DELETE

- DELETE is used to delete a resource
- Return HTTP status 200 when successful deleted
- Returns 404 (NOT FOUND) if resource already removed

* REST API
- REST stands for Representational State Transfer
- It is architectural style for distributed hypermedia systems
- Defines a set of functions from which we can perform requests and receive responses via HTTP protocol
- There are 6 architectural constraints which make's a RESTful API
  - Uniform interface
  - Client-server
  - Stateless
  - Cacheable
  - Layered System
  - Code on demand (optional)

** Uniform Interface
- It defines the interface between clients and servers
- Server can send data from database as HTML, XML or JSON

** Client-server
- Client application and server application run separately without any dependency on each other

** Stateless
- Server will not store any HTTP request client made
- If want to do authorized operations than each request from the client should contain all the necessary information

** Cacheable
- Caching brings performance improvement for client side and reduce load on server
- Caching applied to resources and these resources declare cacheable

** Layered System
- Deploy the APIs on server A, and store data on server B and authenticate requests in server C
- A client cannot tell that the server is connected directly to the end server or not

** Code on Demand (optional)
- Server can also return the executable code instead of resources in form of XML or JSON
